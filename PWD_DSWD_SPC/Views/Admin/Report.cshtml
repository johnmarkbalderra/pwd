@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Admin/Admin_Layout.cshtml";
}

<h3 class="text-dark mb-0" style="padding-top: 20px; display: inline-block;">Report, Concerns, Claims &amp; Problems</h3>

<!-- Search box and sorting dropdown placed inline with h3 -->
<div class="d-flex justify-content-end mb-3">
    <!-- Search Box -->
    <input type="text" id="searchBox" class="form-control me-2" placeholder="Search..." style="width: 300px;">

    <!-- Status Filter Dropdown -->
    <select id="statusFilter" class="form-select" style="width: 200px;">
        <option value="">Filter by Status</option>
        <option value="Acknowledged">Acknowledged</option>
        <option value="Pending">Pending</option>
    </select>
</div>


<div class="table-responsive">
    <table class="table table-striped" id="tab">
        <thead>
            <tr>
                <th>No.</th>
                <th>Name</th>
                <th>Type of Disability</th>
                <th>Contact No.</th>
                <th>Address</th>
                <th>Email</th>
                <th>Establishment</th>
                <th>Branch</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="reportTableBody">
            @for (int i = 0; i < Model.Count; i++)
            {
                var report = Model[i];
                <tr>
                    <td>@(i + 1)</td>
                    <td>@report.FullName</td>
                    <td>@report.TypeOfDisability</td>
                    <td>@report.MobileNo</td>
                    <td>@report.Barangay</td>
                    <td>@report.EmailAddress</td>
                    <td>@report.Establishment</td>
                    <td>@report.Branch</td>
                    <td>
                        @{
                            if (report.Acknowledged)
                            {
                                <span class="badge bg-success">Acknowledged</span>
                            }
                            else
                            {
                                <span class="badge bg-warning">Pending</span>
                            }
                        }
                    </td>
                    <td>
                        <button class="btn btn-outline-success btn-sm" type="button" data-bs-toggle="modal" data-bs-target="#acknowledgeconfirm" data-report-id="@report.ReportId" data-problem="@report.ProblemDescription"> View Problem </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Acknowledge Confirmation Modal -->
<div class="modal fade" id="acknowledgeconfirm" tabindex="-1" aria-labelledby="acknowledgeconfirm" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#0B2271">
                <h5 class="modal-title" style="color:white">Are you sure you want to acknowledge the problem?</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Problem Description in Acknowledgement Modal -->
                <p id="problemDescription"></p>
            </div>
            <div class="modal-footer justify-content-center">
                <button class="btn btn-outline-primary" id="acknowledgeButton" data-bs-dismiss="modal">Yes</button>
                <button class="btn btn-outline-danger" type="button" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap Bundle JS (includes Popper) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<!--SweetAlert-->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

    $(document).ready(function () {
        // Search functionality
        $('#searchBox').on('input', function () {
            var searchText = $(this).val().toLowerCase();
            filterTable(searchText, $('#statusFilter').val());
        });

        // Status filter functionality
        $('#statusFilter').on('change', function () {
            var status = $(this).val();
            filterTable($('#searchBox').val().toLowerCase(), status);
        });

        // Function to filter table
        function filterTable(searchText, status) {
            $('#reportTableBody tr').each(function () {
                var row = $(this);
                var name = row.find('td:nth-child(2)').text().toLowerCase();
                var reportId = row.find('td:nth-child(1)').text().toLowerCase();
                var statusText = row.find('td:nth-child(9) span').text().toLowerCase();

                var matchesSearch = name.includes(searchText) || reportId.includes(searchText);
                var matchesStatus = status ? statusText.includes(status.toLowerCase()) : true;

                if (matchesSearch && matchesStatus) {
                    row.show();
                } else {
                    row.hide();
                }
            });
        }
    });





    // JavaScript to pass ProblemDescription to the modal
    $('#acknowledgeconfirm').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Button that triggered the modal
        var problemDescription = button.data('problem'); // Extract the ProblemDescription from data-* attribute
        var modal = $(this);
        modal.find('.modal-body #problemDescription').text(problemDescription); // Set the text of the modal body
        var reportId = button.data('report-id'); // Extract report ID from data-* attribute
        $('#acknowledgeButton').data('report-id', reportId); // Set the report ID on the Yes button
    });

    // Handle the acknowledge button click
    $('#acknowledgeButton').on('click', function () {
        var reportId = $(this).data('report-id'); // Get the report ID

        // Make an AJAX POST request to send the acknowledgment
        $.ajax({
            url: '/Admin/AcknowledgeReport',
            type: 'POST',
            data: { id: reportId },
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Acknowledged!',
                        text: response.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        // Update the status column dynamically
                        $('button[data-report-id="' + reportId + '"]').closest('tr').find('td:nth-child(9)').html('<span class="badge bg-success">Acknowledged</span>');
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: response.message,
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function () {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while processing the acknowledgment.',
                    confirmButtonText: 'OK'
                });
            }
        });
    });

        //Disable button if the status is "Acknowledged" 
         $('#acknowledgeconfirm').on('show.bs.modal', function (event) {
             var button = $(event.relatedTarget); // Button that triggered the modal
             var problemDescription = button.data('problem'); // Extract the ProblemDescription from data-* attribute
             var modal = $(this);
             var reportId = button.data('report-id'); // Extract report ID from data-* attribute
        
             // Set the problem description text
             modal.find('.modal-body #problemDescription').text(problemDescription);
        
             // Check if the report is already acknowledged
             var isAcknowledged = button.closest('tr').find('td:nth-child(9) span').hasClass('bg-success');
             var acknowledgeButton = modal.find('#acknowledgeButton');
             var noButton = modal.find('.btn-outline-danger'); // Select the "No" button
        
             if (isAcknowledged) {
                 // Disable both the "Yes" and "No" buttons if already acknowledged
                 acknowledgeButton.prop('disabled', true);
                 noButton.prop('disabled', true);
             } else {
                 // Enable both the "Yes" and "No" buttons if not acknowledged
                 acknowledgeButton.prop('disabled', false);
                 noButton.prop('disabled', false);
             }
        
             // Attach the report ID to the "Yes" button
             acknowledgeButton.data('report-id', reportId);
         });

</script>
